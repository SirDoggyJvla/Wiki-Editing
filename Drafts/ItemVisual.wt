{{Header|Modding|Java objects}}
{{Page version|42.2.0}}
'''ItemVisual''' is a class which defines clothing visuals for [[IsoZombie]]s, [[IsoPlayer]]s and [[IsoGameCharacter]]s in general.

==Java doc==
{{Main|Java documentation}}
[https://projectzomboid.com/modding/zombie/core/skinnedmodel/visual/ItemVisual.html ItemVisual]

==Accessing ItemVisuals==
{{Main|ItemVisuals#Accessing ItemVisuals}}
ItemVisual can be accessed through the following methods:
{{CodeSnip
| lang = lua
| code =
-- isoGameCharacter is an IsoGameCharacter instance
local itemVisuals = isoGameCharacter:getItemVisuals()
for i = 0, itemVisuals:size() - 1 do
    local itemVisual = itemVisuals:get(i)
    -- Do something with itemVisual
end
}}

<span style="font-size: 120%; font-weight: bold; color: green;">Note: </span> Whenever you modify the ItemVisuals of a character, you need to call the method <code>isoGameCharacter:resetModel()</code> to apply the changes.

==Modifiying an ItemVisual==
To modify an existing ItemVisual clothing to a different one, you can use the following method:
{{CodeSnip
| lang = lua
| code =
-- isoGameCharacter is an IsoGameCharacter instance
local itemVisuals = isoGameCharacter:getItemVisuals()
local itemVisual = itemVisuals:get(0) -- access the first ItemVisual

-- change the item visual to a different clothing
itemVisua:setItemType("<itemType>") -- <itemType> is the clothing item ID in the script
itemVisual:setClothingItemName("<itemType>")

-- reset the model to apply the changes
isoGameCharacter:resetModel()
}}

==Dirtiness, bloodiness and holes==
ItemVisuals can also be modified to add or remove dirtiness, bloodiness and holes to the clothing. Doing so requires a few more steps, you can use the following methods:
{{CodeSnip
| lang = lua
| code =
-- isoGameCharacter is an IsoGameCharacter instance
local itemVisuals = isoGameCharacter:getItemVisuals()
local itemVisual = itemVisuals:get(0) -- access the first ItemVisual

-- access the script item
local scriptItem = item:getScriptItem()

-- access the blood clothing type
local blood = scriptItem:getBloodClothingType()

-- no point in continuing if the blood clothing type is nil or there's no items
if blood and blood:size() >= 1 then
    -- access the parts covered by the clothing
    local coveredParts = BloodClothingType.getCoveredParts(blood)
    for j = 0, coveredParts:size() - 1 do
        local bloodPart = coveredParts:get(j)

        -- set the blood and dirtiness levels
        item:setBlood(bloodPart,0.5) -- 0 is clean, 1 is bloody
        item:setDirt(bloodPart,0.8) -- 0 is clean, 1 is dirty

        -- set the hole level
        item:setHole(bloodPart)
    end
end

-- reset the model to apply the changes
isoGameCharacter:resetModel()
}}

==See also==
*[[ItemVisuals]] - an array of ItemVisual for an IsoGameCharacter.

{{Navbox Java objects}}
