{{Header|Modding|Modding guides}}
{{Page version|42.11.0}}
{{About|modding structure of Project Zomboid|game files of Project Zomboid|Game files|explanations of file formats|File formats}}

Local mods are recognized in two different folders which each have their own rules and structure and are both in the [[Game files#Cache folder|cache folder]]:
*{{Code|Zomboid/mods/}} - place to put mods to install manually without using the Steam Workshop. Not recommanded for mod development.
*{{Code|Zomboid/workshop/}} - folder used for mod development and uploading to the Steam Workshop.

Example default mod structures are provided by the community to directly use:
*[https://github.com/Project-Zomboid-Community-Modding/pzmc-template Project Zomboid Community Modding template] - a template mod structure to use as a base for your own mods. Simply make a copy of the repository.

==Mods or workshop ?==
Using the <code>Workshop</code> folder is needed to use the [[Uploading mods#In-game uploader|in-game uploader]] meaning if you use the <code>mods</code> folder you will inevitably end up having to make a copy of your mod in the <code>Workshop</code> folder to upload it to the Steam Workshop. This is still an issue when using an external uploader like the [[Steam Uploader]] modding project, as you need to upload the <code>mods</code> folder which would upload all the extra folders. Take this for example, the folder structure of the cache folder:
{{CodeSnip
| code =
~/
└── Zomboid/
    ├── Crafting/
    ├── joypads/
    ├── logs/
    ├── Lua/
    ├── messaging/
    ├── mods/
    │   ├── MyMod1/
    │   │   └── ...
    │   └── MyMod2/
    │       └── ...
    ├── Recording/
    ├── Sandbox Presets/
    ├── Saves/
    ├── Workshop/
    │   └── MyModWorkshop/
    │       └── Contents/
    │           └── mods/
    │               ├── MyMod1/
    │               │   └── ...
    │               └── MyMod2/
    │                   └── ...
    ├── console.txt
    └── ...
}}

In the case where you use the <code>mods</code> folder, to upload with an external tool you would have to indicate the application to upload the content of the folder <code>~/Zomboid</code> since the <code>mods</code> folder needs to be uploaded. This will also upload all the folders around it and will upload other mods you are developing inside the <code>mods</code> folder.

A bad solution is to copy the mods you want to upload inside of the <code>Workshop</code> folder for your mod but the problem with making copies of a mod is that they will clash and so you need to make sure to delete the mod copy inside the <code>Workshop</code> folder or you risk having invisible issues during the development.

This last principle also applies to downloading your own mods on the Workshop while having local copies inside the <code>mods</code> folder or the <code>Workshop</code> folder, as they will clash and cause issues. While working directly from the <code>Workshop</code> folder will assure you never get any problems in the future.

Another benefit of using the <code>Workshop</code> folder is that it allows you to store additional assets in the upper echelon of your mods <code>Workshop</code> folder. This is due to the <code>Workshop</code> folder having extra folders before the <code>mods</code> folder, taking the previous shared example you have <code>MyModWorkshop</code> and <code>Contents</code>. Anything in the <code>Contents</code> folder will be uploaded to the Workshop, but anything placed at the same level as it, inside <code>MyModWorkshop</code>, will not be uploaded and completely ignored by the game. You can use this to create other subfolders like <code>images</code> or <code>assets</code> which will hold your modding assets, you can have a file <code>README.md</code> and also a <code>.git</code> folder to have <code>MyModWorkshop</code> serve as your mod's [[Wikipedia:Git|git]] repository.

==Workshop folder==
The Workshop folder will use the following structure:
{{CodeSnip
|code = 
Zomboid/
└── Workshop/
    └── MyExampleMod/
        ├── Contents/
        │   └── mods/
        │       ├── MyMod1/
        │       │   └── ...
        │       └── MyMod2/
        │           └── ...
        ├── workshop.txt
        └── preview.png
}}

*<code>Contents/</code>: The folder will only have the <code>mods/</code> folder.
*<code>Contents/mods/</code>: Your various mods which can be activated by the players will be put here, with each mod having their own [[mod.info]] file associated to be recognized (see [[#Mod folder]]). This is the folder uploaded to the Workshop.
*<code>workshop.txt</code>: Informations which are needed to upload your mod are put here (see [[workshop.txt]]).
*<code>preview.png</code>: The image used as your mod preview on the Steam Workshop. Game imposes a 256x256 resolution.

{{Note|Subfolders in <code>MyExampleMod/</code> which are not <code>Contents/</code> are not recognized by the game and can be used to store various files for your mod that shouldn't get uploaded. Thus you can store in it Python scripts, images, assets, etc.}}
{{Note|<code>MyExampleMod/</code> can be used as a Git repository (GitHub, GitLab...).}}

==Mod folder==
The files of your mods are placed in the folder <code>Contents/mods/</code> alongside a [[mod.info]] file which is the core of your mod. The folder structure of your mod folder should be as follows:

====Build 41====
[[Build 41]] uses the following modding structure.
{{CodeSnip
| code =
Contents/
└── mods/
    ├── MyMod1/
    │   ├── media/
    │   │   └── ...
    │   ├── mod.info
    │   ├── poster.png
    │   └── ...
    └── MyMod2/             <--- for extra mods, simply add a new mod folder
        ├── media/
        │   └── ...
        ├── mod.info
        ├── poster.png
        └── ...
}}

{{Note|type=warn|The [[#Build 42|Build 42 modding structure]] is considered for the rest of the page. The main difference is the position of the [[#Media folder|media folder]] and the lack of versioning and common folders for Build 41.}}

===Build 42===
[[Build 42]] uses the following modding structure.
{{CodeSnip
| code =
Contents/
└── mods/
    ├── MyMod1/
    │   ├── common/         <--- common folder is mandatory, even if empty !
    │   │   └── media/
    │   │       └── ...
    │   ├── 42/
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   ├── 42.1/           <--- for extra versions, simply add a new version folder
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   ├── 42.1.5/         <--- same here, another different version
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   └── ...
    └── MyMod2/            <--- for extra mods, simply add a new differently named mod folder
        └── ...
}}

{{Note|Multiple mods can be present in a single uploaded mod (inside <code>Contents/mods/</code>). This can be used for optional mods or different versions of the same mod.}}

==Common and versioning folders==
Common and versioning folders, introduced in [[Build 42]], help manage different mod versions per game version.  

*'''Versioning folders''' are useful when players stick to older game versions. You don't need one for every version. They should contain code files and [[mod.info]], as they often change with the game version.
*'''Common folder''' stores large files (models, textures, animations) to keep mod size down.  

These folders load with the following order:
#Common folder  
#Closest versioning folder to the game version (overwrites common files which are present in it)

The versioning folders can have the following possible naming:
{{CodeSnip
| code =
buildVersion.majorUpdate.minorUpdate
buildVersion.majorUpdate                ====> buildVersion.majorUpdate.0
buildVersion                            ====> buildVersion.0.0
}}

For example:
{{CodeSnip
| code =
42             ====> 42.0.0
43             ====> 43.0.0
42.12          ====> 42.12.0
42.1           ====> 42.1.0
42.0.5
43.5.1
}}

{{Note|type=warn|Common folder is not recognized by [[Build 41]] modding structure. However, the [[Build 41]] [[Lua (API)|Lua API]] can access some files in some cases.}}
{{Note|type=error|Common folder is mandatory, even if empty, for your mod to work !}}

==Media folder==
Mod assets are for the most part inside this folder. Different subfolders need to be created based on the type of assets. These are usually the same as the [[Game files#Media folder|game media folder]] and based on your [[Modding#Modding fields|modding field]], you need different ones. See each modding fields individual pages for more details on their folder structure:
{| class="wikitable theme-blue"
|+ style="white-space:nowrap" | Subfolders and modding field
! Modding field !! Subfolder
|-
| [[Animation]] || 
*<code>anims_X</code>
*<code>AnimSets</code>
|-
| [[Lua (API)|Lua]] || 
*<code>lua</code>
*<code>ui</code> and <code>textures</code> used for custom UI elements
|-
| [[Mapping]] || 
*<code>maps</code>
|-
| [[Scripts]] || 
*<code>scripts</code>
*<code>clothing</code>
*<code>textures</code>
*<code>model_X</code>
*<code>sound</code>
|}

{{Note|type=error|Folder and file names must use strict casing spelling. For example, <code>lua</code> should not be written as <code>Lua</code> or <code>LUA</code>. Incorrect casing may prevent the game from recognizing your files for [[Wikipedia:Operating system|operating systems]] with case-sensitive file systems.}}

===clothing===
The <code>clothing</code> folder is used to define clothing items via the use of XML files. Each clothing items is associated to its own XML file and a [[Wikipedia:Universally unique identifier|GUID]] to recognize the clothing item. Subfolders can be created to organize the clothing items. The outfit manager is also defined inside the file <code>clothing.xml</code> and is used to create or modify existing outfits. While this file is named the same as any others, it will not overwrite other files named like it.

===models_X===
{{Main|Model (scripts)}}
The <code>models_X</code> folder is used to store model files. The files need to be either in the DirectX format (<code>.x</code>) or Filmbox format (<code>.fbx</code>). They can be put in subfolders for organization and can replace files with the same relative path. See the [[File formats#Modeling and animation formats]] page for more detail.

===textures===
The <code>textures</code> folder is used to store texture files. The files need to be in the PNG format (<code>.png</code>). They can be put in subfolders for organization and can replace files with the same relative path. See the [[File formats#Image formats]] page for more detail.

===ui===
The <code>ui</code> folder is used to store images used in the user interface elements in the game. The files need to be in the PNG format (<code>.png</code>). They can be put in subfolders for organization and can replace files with the same relative path.

===sound===
The <code>sound</code> folder is used to store sound files. The files need to be in the OGG format (<code>.ogg</code>) or WAV format (<code>.wav</code>). They can be put in subfolders for organization and can replace files with the same relative path. Some sounds are stored inside bank files (<code>.bank</code>) which are used by the Fmod sound system, and they cannot be overwritten nor can bank files be loaded from mods.

==Example==
Below is a full example of a mod structure in Windows.
{{CodeSnip
| code =
%UserProfile%/
└── Zomboid/
    └── Workshop/
        └── MyMod/
            ├── Contents/
            │   └── mods/
            │       ├── MyMod1/
            │       │   ├── 42.0.0/                 <--- will be loaded for versions above 42.0.0
            │       │   │   ├── media/
            │       │   │   │   ├── AnimSets/
            │       │   │   │   │   └── ...
            │       │   │   │   ├── lua/
            │       │   │   │   │   ├── client/
            │       │   │   │   │   │   └── ...
            │       │   │   │   │   ├── server/
            │       │   │   │   │   │   └── ...
            │       │   │   │   │   └── shared/
            │       │   │   │   │       └── ...
            │       │   │   │   ├── scripts/
            │       │   │   │   │   └── ...
            │       │   │   │   └── ...
            │       │   │   ├── mod.info
            │       │   │   ├── poster.png
            │       │   │   └── icon.png
            │       │   ├── 42.X.Y/                 <--- will be loaded instead of older versions (4.0.0 for example will not load), for game versions compatibility if needed
            │       │   │   └── ...
            │       │   ├── common/                 <--- mandatory, mod won't be detected without it
            │       │   │   └── media/
            │       │   │       ├── anim_X/
            │       │   │       │   └── ...
            │       │   │       ├── model_X/
            │       │   │       │   └── ...
            │       │   │       └── ...
            │       │   ├── media/                  <--- Build 41 only folder, not used in Build 42
            │       │   │   ├── anim_X/
            │       │   │   │   └── ...
            │       │   │   ├── AnimSets/
            │       │   │   │   └── ...
            │       │   │   ├── lua/
            │       │   │   │   ├── client/
            │       │   │   │   │   └── ...
            │       │   │   │   ├── server/
            │       │   │   │   │   └── ...
            │       │   │   │   └── shared/
            │       │   │   │       └── ...
            │       │   │   ├── model_X/
            │       │   │   │   └── ...
            │       │   │   └── scripts/
            │       │   │       └── ...
            │       │   ├── mod.info
            │       │   ├── poster.png
            │       │   └── icon.png
            │       └── MyMod2/                     <--- secondary mod, optional if needed
            │           ├── 42.0.0/
            │           │   ├── mod.info
            │           │   ├── poster.png
            │           │   ├── icon.png
            │           │   └── ...
            │           ├── 42.X.Y/
            │           │   └── ...
            │           ├── common/
            │           │   └── ...
            │           ├── media/
            │           │   └── ...
            │           ├── mod.info
            │           ├── poster.png
            │           ├── icon.png
            │           └── ...
            ├── workshop.txt                        <--- automatically generated when uploading
            └── preview.png                         <--- 256x256 image
}}

==See also==
*[[Uploading mods]] - teaches about uploading mods.
*[[Game files]] - accessing the game files.
*[[Workshop.txt]] - about a file used by the in-game uploader.
*[[mod.info]] - about the core file which defines your mod.

==Navigation==
{{Navbox modding}}

{{ll|Category:Modding guides}}
