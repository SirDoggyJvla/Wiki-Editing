{{Header|Modding}}
{{Page version|42.5.1}}
{{About|file structure of Project Zomboid|explanations of file formats|File formats}}
This page describes the '''file structure''' of Project Zomboid. This page will list the folder structure needed for modding as well as where different types of files can be found.

==Accessing the game folder==
The game folder holds most of the game code, files, textures, maps, models etc. Accessing the game files of Project Zomboid can be easily achieved through Steam:
*Open your Steam game library
*Right click on Project Zomboid > Manage > Browse local files
*Alternatively you can rick click Project Zomboid > Properties > Installed files > Browse

This should open a folder named <code>ProjectZomboid/</code> with a similar path to this:
{{CodeSnip
| code =
Steam/
└── steamapps/
    └── common/
        └── ProjectZomboid/
            └── ...
}}

Also check the video below which explains two different methods of finding the files:
https://www.youtube.com/watch?v=5LCGwCk7RH4

===Default media folder===
Most of the files which you'll be interested in when modding will be located in:
{{CodeSnip
| code =
ProjectZomboid/
└── media/
    └── ...
}}

===Cache folder===
The cache folder (named <code>Zomboid</code> by default) holds most of your configuration of the game, as well as local mods, and doesn't get deleted when you uninstall the game, holding all your configurations. To access the folder, simply use the following path in your file explorer:
{{CodeSnip
|code =
%UserProfile%/Zomboid
}}

Deleting this folder can sometimes fix some game issues, however this will delete your game settings and saves, which you can backup before doing so.

===Console file===
The console file is located at the following path:
{{CodeSnip
|code =
%UserProfile%
└── Zomboid/
    └── console.txt
}}

===Online workshop folders===
When accessing the game files, if you go in a few folders above in <code>Steam/steamapps/</code>, you can access the folder <code>workshop/content/</code> which stores every mods from all of your games. Project Zomboid has the Steam ID <code>108600</code> which can be seen in the URL of the Steam market page of the game. The mods are stored in the following folder:
{{CodeSnip
|code =
Steam/
└── steamapps/
    └── workshop/
        └── content/
            └── 108600/
                └── ...
}}

To look for a specific mod in this folder, you can look for the Workshop ID of the mod which can be found in the URL of the mod page on the Steam Workshop or automatically at the bottom of the Workshop page. The folder of the mod will be named after the Workshop ID.

==Modding structure==
Local mods are recognized in two different folders which each have their own rules and structure and are both in the [[#Cache folder]]:
*<code>Zomboid/mods/</code> - place to put mods to install manually without using the Steam Workshop. Not recommanded for mod development.
*<code>Zomboid/workshop/</code> - folder used for mod development and uploading to the Steam Workshop.

See this [https://github.com/Project-Zomboid-Community-Modding/pzmc-template example mod structure] to get started with your mod. Make sure to change the files as needed for your own case.

{{Note|It is highly suggested to use the <code>workshop/</code> folder for mod development as mods need to be uploaded from it and developing from the <code>mods/</code> folder will always require you to make a copy of it inside the <code>workshop/</code> folder if you want to upload it. There's also other advantages to using this folder.}}

===Workshop folder===
The Workshop folder will use the following structure:
{{CodeSnip
|code = 
Zomboid/
└── Workshop/
    └── MyExampleMod/
        ├── Contents/
        │   └── mods/
        │       ├── MyMod1/
        │       │   └── ...
        │       └── MyMod2/
        │           └── ...
        ├── workshop.txt
        └── preview.png
}}

*<code>Contents/</code>: The folder will only have the <code>mods/</code> folder.
*<code>Contents/mods/</code>: Your various mods which can be activated by the players will be put here, with each mod having their own [[mod.info]] file associated to be recognized (see [[#Mod folder]]). This is the folder uploaded to the Workshop.
*<code>workshop.txt</code>: Informations which are needed to upload your mod are put here (see [[workshop.txt]]).
*<code>preview.png</code>: The image used as your mod preview on the Steam Workshop. Game imposes a 256x256 resolution.

{{Note|Subfolders in <code>MyExampleMod/</code> which are not <code>Contents/</code> are not recognized by the game and can be used to store various files for your mod that shouldn't get uploaded. Thus you can store in it Python scripts, images, assets, etc.}}
{{Note|<code>MyExampleMod/</code> can be used as a Git repository (Git, Github, GitLab...).}}

===Mod folder===
The files of your mods are placed in the folder <code>Contents/mods/</code> alongside a [[mod.info]] file which is the core of your mod. The folder structure of your mod folder should be as follows:

====Build 41====
[[Build 41]] uses the following modding structure.
{{CodeSnip
| code =
Contents/
└── mods/
    ├── MyMod1/
    │   ├── media/
    │   │   └── ...
    │   ├── mod.info
    │   ├── poster.png
    │   └── ...
    └── MyMod2/             <--- for extra mods, simply add a new mod folder
        ├── media/
        │   └── ...
        ├── mod.info
        ├── poster.png
        └── ...
}}

{{Note|type=warn|The [[#Build 42|Build 42 modding structure]] is considered for the rest of the page. The main difference is the position of the [[#Media folder|media folder]] and the lack of versioning and common folders for Build 41.}}

====Build 42====
[[Build 42]] uses the following modding structure.
{{CodeSnip
| code =
Contents/
└── mods/
    ├── MyMod1/
    │   ├── common/         <--- common folder is mandatory, even if empty !
    │   │   └── media/
    │   │       └── ...
    │   ├── 42/
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   ├── 42.1/           <--- for extra versions, simply add a new version folder
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   ├── 42.1.5/         <--- same here, another different version
    │   │   ├── media/
    │   │   │   └── ...
    │   │   ├── mod.info
    │   │   └── poster.png
    │   └── ...
    └── MyMod2/            <--- for extra mods, simply add a new differently named mod folder
        └── ...
}}

{{Note|Multiple mods can be present in a single uploaded mod (inside <code>Contents/mods/</code>). This can be used for optional mods or different versions of the same mod.}}

===Common and versioning folders===
Common and versioning folders, introduced in [[Build 42]], help manage different mod versions per game version.  

*'''Versioning folders''' are useful when players stick to older game versions. You don't need one for every version. They should contain code files and [[mod.info]], as they often change with the game version.
*'''Common folder''' stores large files (models, textures, animations) to keep mod size down.  

These folders load with the following order:
#Common folder  
#Closest versioning folder to the game version (overwrites common files which are present in it)

The versioning folders can have the following possible naming:
{{CodeSnip
| code =
buildVersion.majorUpdate.minorUpdate
buildVersion.majorUpdate                ====> buildVersion.majorUpdate.0
buildVersion                            ====> buildVersion.0.0
}}

For example:
{{CodeSnip
| code =
42             ====> 42.0.0
43             ====> 43.0.0
42.12          ====> 42.12.0
42.1           ====> 42.1.0
42.0.5
43.5.1
}}

{{Note|type=warn|Common folder is not recognized by [[Build 41]] modding structure. However, the [[Build 41]] [[Lua (API)|Lua API]] can access some files in some cases.}}
{{Note|type=error|Common folder is mandatory, even if empty, for your mod to work !}}

===Media folder===
Mod assets are put inside this folder. Different subfolders need to be created based on the type of assets. These are usually the same as the [[#Default media folder|game media folder]] but below is a list of the commonly used subfolders:

{| class="wikitable theme-blue"
|+ style="white-space:nowrap" | List of commonly used subfolders
! Subfolder !! Description
|-
| style="min-width: 200px;text-align: center;"| <code>lua</code>
| style="min-width: 600px;"| To program with [[Lua (language)|Lua]] using the [[Lua (API)|API]].
|-
| style="min-width: 200px;text-align: center;"| <code>scripts</code>
| style="min-width: 600px;"| To create scripts for [[Item (scripts)|items]], [[Sound (scripts)|sounds]], [[Model (scripts)|models]], [[Vehicle (scripts)|vehicles]], [[CraftRecipe|crafts]], etc.
|-
| style="min-width: 200px;text-align: center;"| <code>AnimSets</code>
| style="min-width: 600px;"| [[File formats#XML|XML]] files which are used to define how animations are triggered.
|-
| style="min-width: 200px;text-align: center;"| <code>clothing</code>
| style="min-width: 600px;"| [[File formats#XML|XML]] files which are used to define clothing items and outfits.
|-
| style="min-width: 200px;text-align: center;"| <code>anims_X</code>
| style="min-width: 600px;"| For [[File formats#Modeling and animation formats|animation files]].
|-
| style="min-width: 200px;text-align: center;"| <code>models_X</code>
| style="min-width: 600px;"| For [[File formats#Modeling and animation formats|model files]].
|-
| style="min-width: 200px;text-align: center;"| <code>textures</code>
| style="min-width: 600px;"| For texture files used on models.
|-
| style="min-width: 200px;text-align: center;"| <code>ui</code>
| style="min-width: 600px;"| For images used in UI elements.
|-
| style="min-width: 200px;text-align: center;"| <code>sound</code>
| style="min-width: 600px;"| For sounds files.
|-
| style="min-width: 200px;text-align: center;"| <code>maps</code>
| style="min-width: 600px;"| For map files.
|}

{{Note|Technically, files which are in the parent folder of the media folder can be read from the [[Lua (API)|Lua API]] within the media folder.}}

==See also==
*[[Workshop.txt]]
*[[mod.info]]

{{Navbox modding}}

{{ll|Category:Guides}}
